{"version":3,"file":"inline-svg.directive.d.ts","sources":["inline-svg.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentFactoryResolver, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, ViewContainerRef } from '@angular/core';\nimport { SVGCacheService } from './svg-cache.service';\nimport { InlineSVGService } from './inline-svg.service';\nimport { SVGScriptEvalMode, InlineSVGConfig } from './inline-svg.config';\nexport declare class InlineSVGDirective implements OnInit, OnChanges, OnDestroy {\n    private _el;\n    private _viewContainerRef;\n    private _resolver;\n    private _svgCache;\n    private _renderer;\n    private _inlineSVGService;\n    private _config;\n    private platformId;\n    inlineSVG: string;\n    resolveSVGUrl: boolean;\n    replaceContents: boolean;\n    prepend: boolean;\n    injectComponent: boolean;\n    cacheSVG: boolean;\n    setSVGAttributes: {\n        [key: string]: any;\n    };\n    removeSVGAttributes: Array<string>;\n    forceEvalStyles: boolean;\n    evalScripts: SVGScriptEvalMode;\n    fallbackImgUrl: string;\n    onSVGLoaded: (svg: SVGElement, parent: Element | null) => SVGElement;\n    onSVGInserted: EventEmitter<SVGElement>;\n    onSVGFailed: EventEmitter<any>;\n    private _supportsSVG;\n    private _prevUrl;\n    private _svgComp;\n    private _subscription;\n    constructor(_el: ElementRef, _viewContainerRef: ViewContainerRef, _resolver: ComponentFactoryResolver, _svgCache: SVGCacheService, _renderer: Renderer2, _inlineSVGService: InlineSVGService, _config: InlineSVGConfig, platformId: Object);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    private _insertSVG;\n    private _processSvg;\n    private _insertEl;\n    private _fail;\n    private _isValidPlatform;\n    private _isSSRDisabled;\n}\n"]}